[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bytepiece"
version = "0.1.0"
description = "Educational, production-grade BPE and Unigram tokenizer in pure Python"
readme = "README.md"
license = "Apache-2.0"
authors = [
    { name = "BytePiece Contributors" }
]
requires-python = ">=3.9"
keywords = ["tokenizer", "bpe", "unigram", "nlp", "unicode"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]

dependencies = [
    "typer>=0.9.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "hypothesis>=6.88.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "black>=23.9.0",
]
bench = [
    "matplotlib>=3.7.0",
    "pandas>=2.0.0",
]

[project.scripts]
bytepiece = "bytepiece.cli.__main__:app"

[project.urls]
Homepage = "https://github.com/notGiGi/Bytesandpiece"
Documentation = "https://github.com/notGiGi/Bytesandpiece"
Repository = "https://github.com/notGiGi/Bytesandpiece"

[tool.hatch.build.targets.wheel]
packages = ["bytepiece"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "-v --cov=bytepiece --cov-report=term-missing --cov-report=html"

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["E501"]  # line too long (handled by black)

[tool.black]
line-length = 100
target-version = ["py39"]

[tool.coverage.run]
source = ["bytepiece"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]